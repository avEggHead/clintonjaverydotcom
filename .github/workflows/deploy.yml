name: Deploy Vite Site to Azure Storage

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: ‚¨áÔ∏è Checkout code
      uses: actions/checkout@v2

    - name: üß± Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: üì¶ Install dependencies
      run: npm install
      

    - name: üõ† Build the site
      run: npm run build

    - name: ‚öôÔ∏è Install Azure CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y azure-cli

    - name: ‚ùå Delete existing blobs
      run: |
        az storage blob delete-batch --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
                                     --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} \
                                     --source '$web'
      env:
        AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
        AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}

    - name: üöÄ Upload new build
      run: |
        az storage blob upload-batch --account-name ${{ secrets.c }} \
                                     --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} \
                                     --destination '$web' \
                                     --source './dist' \
                                     --overwrite
      env:
        AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
        AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}

    # Optional: Purge Cloudflare cache if you're using it
    # - name: Purge Cloudflare Cache
    #   if: success()
    #   env:
    #     CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    #     CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
    #   run: |
    #     curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache" \
    #          -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
    #          -H "Content-Type: application/json" \
    #          --data '{"purge_everything":true}'
